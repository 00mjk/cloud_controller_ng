### Create a resource match

```
Example Request
```

```shell
curl "https://api.example.org/v3/resource_matches" \
  -X POST \
  -H "Authorization: bearer [token]" \
  -H "Content-Type: application/json" \
  -d '{
        "resources": [
          {
            "checksum": { "value": "002d760bea1be268e27077412e11a320d0f164d3" },
            "size_in_bytes": 36,
            "path": "C:\\path\\to\\file",
            "mode": "645"
          },
          {
            "checksum": { "value": "a9993e364706816aba3e25717850c26c9cd0d89d" },
            "size_in_bytes": 1,
            "path": "path/to/file",
            "mode": "644"
          }
        ]
      }'

```


```
Example Response
```

```http
HTTP/1.1 201 OK
Content-Type: application/json

<%= yield_content :resource_match %>
```

#### Definition
`POST /v3/resource_matches`

#### Required Parameters

Name          | Type                                           | Description
------------- | ---------------------------------------------- | -----------
**resources** | _array of [resource_object](#resource-object)_ | List of resources to check for in the resource cache

#### Permitted Roles
 |
--- | ---
All Roles |

#### Resource Object

Name               | Type      | Description
------------------ | --------- | -----------
**checksum.value** | _string_  | **(Required)** SHA-1 hash of file
**size_in_bytes**  | _integer_ | **(Required)** Size of file in bytes
**path**           | _string_  | Path to the file, relative to app root
**mode**           | _string_  | File mode, i.e. POSIX file permissions
